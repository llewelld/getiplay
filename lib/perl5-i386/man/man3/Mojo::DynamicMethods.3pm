.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Mojo::DynamicMethods 3"
.TH Mojo::DynamicMethods 3 "perl v5.16.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::DynamicMethods \- Fast dynamic method dispatch
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  package MyClass;
\&  use Mojo::Base \-base;
\&
\&  use Mojo::DynamicMethods \-dispatch;
\&
\&  sub BUILD_DYNAMIC {
\&    my ($class, $method, $dyn_methods) = @_;
\&    return sub {...};
\&  }
\&
\&  sub add_helper {
\&    my ($self, $name, $cb) = @_;
\&    Mojo::DynamicMethods::register \*(AqMyClass\*(Aq, $self, $name, $cb;
\&  }
\&
\&  package main;
\&
\&  # Generate methods dynamically (and hide them from "$obj\->can(...)")
\&  my $obj = MyClass\->new;
\&  $obj\->add_helper(foo => sub { warn \*(AqHello Helper!\*(Aq });
\&  $obj\->foo;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojo::DynamicMethods provides dynamic method dispatch for per-object helper
methods without requiring use of \f(CW\*(C`AUTOLOAD\*(C'\fR.
.PP
To opt your class into dynamic dispatch simply pass the \f(CW\*(C`\-dispatch\*(C'\fR flag.
.PP
.Vb 1
\&  use Mojo::DynamicMethods \-dispatch;
.Ve
.PP
And then implement a \f(CW\*(C`BUILD_DYNAMIC\*(C'\fR method in your class, making sure that the
key you use to lookup methods in \f(CW$dyn_methods\fR is the same thing you pass as
\&\f(CW$ref\fR to \*(L"register\*(R".
.PP
.Vb 10
\&  sub BUILD_DYNAMIC {
\&    my ($class, $method, $dyn_methods) = @_;
\&    return sub {
\&      my ($self, @args) = @_;
\&      my $dynamic = $dyn_methods\->{$self}{$method};
\&      return $self\->$dynamic(@args) if $dynamic;
\&      my $package = ref $self;
\&      croak qq{Can\*(Aqt locate object method "$method" via package "$package"};
\&    };
\&  }
.Ve
.PP
Note that this module is \fB\s-1EXPERIMENTAL\s0\fR and might change without warning!
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
Mojo::DynamicMethods implements the following functions.
.SS "register"
.IX Subsection "register"
.Vb 1
\&  Mojo::DynamicMethods::register $class, $ref, $name, $cb;
.Ve
.PP
Registers the method \f(CW$name\fR as eligible for dynamic dispatch for \f(CW$class\fR,
and sets \f(CW$cb\fR to be looked up for \f(CW$name\fR by reference \f(CW$ref\fR in a dynamic
method constructed by \f(CW\*(C`BUILD_DYNAMIC\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <https://mojolicious.org>.
