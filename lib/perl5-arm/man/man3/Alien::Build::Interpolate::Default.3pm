.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Alien::Build::Interpolate::Default 3"
.TH Alien::Build::Interpolate::Default 3 "perl v5.16.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Alien::Build::Interpolate::Default \- Default interpolator for Alien::Build
.SH "VERSION"
.IX Header "VERSION"
version 1.85
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.SS "new"
.IX Subsection "new"
.Vb 1
\& my $intr = Alien::Build::Interpolate::Default\->new;
.Ve
.SH "HELPERS"
.IX Header "HELPERS"
.SS "ar"
.IX Subsection "ar"
.Vb 1
\& %{ar}
.Ve
.PP
The ar command.
.SS "bison"
.IX Subsection "bison"
.Vb 1
\& %{bison}
.Ve
.PP
Requires: Alien::bison 0.17
.SS "bzip2"
.IX Subsection "bzip2"
.Vb 1
\& %{bzip2}
.Ve
.PP
Requires: Alien::Libbz2 0.04
.SS "cc"
.IX Subsection "cc"
.Vb 1
\& %{cc}
.Ve
.PP
The C Compiler used to build Perl
.SS "cmake"
.IX Subsection "cmake"
.Vb 1
\& %{cmake}
.Ve
.PP
Requires: Alien::CMake 0.07
.SS "cp"
.IX Subsection "cp"
.Vb 1
\& %{cp}
.Ve
.PP
The copy command.
.SS "devnull"
.IX Subsection "devnull"
.Vb 1
\& %{devnull}
.Ve
.PP
The null device, if available.  On Unix style operating systems this will be \f(CW\*(C`/dev/null\*(C'\fR on Windows it is \f(CW\*(C`NUL\*(C'\fR.
.SS "flex"
.IX Subsection "flex"
.Vb 1
\& %{flex}
.Ve
.PP
Requires: Alien::flex 0.08
.SS "gmake"
.IX Subsection "gmake"
.Vb 1
\& %{gmake}
.Ve
.PP
Requires: Alien::gmake 0.11
.SS "install"
.IX Subsection "install"
.Vb 1
\& %{install}
.Ve
.PP
The Unix \f(CW\*(C`install\*(C'\fR command.  On \f(CW\*(C`MSWin32\*(C'\fR this requires Alien::MSYS2.
.SS "ld"
.IX Subsection "ld"
.Vb 1
\& %{ld}
.Ve
.PP
The linker used to build Perl
.SS "m4"
.IX Subsection "m4"
.Vb 1
\& %{m4}
.Ve
.PP
Requires: Alien::m4 0.08
.SS "make"
.IX Subsection "make"
.Vb 1
\& %{make}
.Ve
.PP
The make program used by Perl.
.SS "make_path"
.IX Subsection "make_path"
.Vb 1
\& %{make_path}
.Ve
.PP
Make directory, including all parent directories as needed.  This is usually \f(CW\*(C`mkdir \-p\*(C'\fR
on Unix and simply \f(CW\*(C`md\*(C'\fR on windows.
.SS "nasm"
.IX Subsection "nasm"
.Vb 1
\& %{nasm}
.Ve
.PP
Requires: Alien::nasm 0.11
.SS "patch"
.IX Subsection "patch"
.Vb 1
\& %{patch}
.Ve
.PP
Requires: Alien::patch 0.09
.SS "perl"
.IX Subsection "perl"
.Vb 1
\& %{perl}
.Ve
.PP
Requires: Devel::FindPerl
.SS "pkgconf"
.IX Subsection "pkgconf"
.Vb 1
\& %{pkgconf}
.Ve
.PP
Requires: Alien::pkgconf 0.06
.SS "cwd"
.IX Subsection "cwd"
.Vb 1
\& %{cwd}
.Ve
.SS "sh"
.IX Subsection "sh"
.Vb 1
\& %{sh}
.Ve
.PP
Unix style command interpreter (/bin/sh).  On MSWin32 this requires Alien::MSYS.
.SS "rm"
.IX Subsection "rm"
.Vb 1
\& %{rm}
.Ve
.PP
The remove command
.SS "xz"
.IX Subsection "xz"
.Vb 1
\& %{xz}
.Ve
.PP
Requires: Alien::xz 0.02
.SH "AUTHOR"
.IX Header "AUTHOR"
Author: Graham Ollis <plicease@cpan.org>
.PP
Contributors:
.PP
Diab Jerius (\s-1DJERIUS\s0)
.PP
Roy Storey (\s-1KIWIROY\s0)
.PP
Ilya Pavlov
.PP
David Mertens (run4flat)
.PP
Mark Nunberg (mordy, mnunberg)
.PP
Christian Walde (Mithaldu)
.PP
Brian Wightman (MidLifeXis)
.PP
Zaki Mughal (zmughal)
.PP
mohawk (mohawk2, \s-1ETJ\s0)
.PP
Vikas N Kumar (vikasnkumar)
.PP
Flavio Poletti (polettix)
.PP
Salvador Fandiño (salva)
.PP
Gianni Ceccarelli (dakkar)
.PP
Pavel Shaydo (zwon, trinitum)
.PP
Kang-min Liu (劉康民, gugod)
.PP
Nicholas Shipp (nshp)
.PP
Juan Julián Merelo Guervós (\s-1JJ\s0)
.PP
Joel Berger (\s-1JBERGER\s0)
.PP
Petr Pisar (ppisar)
.PP
Lance Wicks (\s-1LANCEW\s0)
.PP
Ahmad Fatoum (a3f, \s-1ATHREEF\s0)
.PP
José Joaquín Atria (\s-1JJATRIA\s0)
.PP
Duke Leto (\s-1LETO\s0)
.PP
Shoichi Kaji (\s-1SKAJI\s0)
.PP
Shawn Laffan (\s-1SLAFFAN\s0)
.PP
Paul Evans (leonerd, \s-1PEVANS\s0)
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011\-2019 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
