.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Alien::Libxml2 3"
.TH Alien::Libxml2 3 "perl v5.16.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Alien::Libxml2 \- Install the C libxml2 library on your system
.SH "VERSION"
.IX Header "VERSION"
version 0.09
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In your Build.PL:
.PP
.Vb 12
\& use Module::Build;
\& use Alien::Libxml2;
\& my $builder = Module::Build\->new(
\&   ...
\&   configure_requires => {
\&     \*(AqAlien::Libxml2\*(Aq => \*(Aq0\*(Aq,
\&     ...
\&   },
\&   extra_compiler_flags => Alien::Libxml2\->cflags,
\&   extra_linker_flags   => Alien::Libxml2\->libs,
\&   ...
\& );
\& 
\& $build\->create_build_script;
.Ve
.PP
In your Makefile.PL:
.PP
.Vb 3
\& use ExtUtils::MakeMaker;
\& use Config;
\& use Alien::Libxml2;
\& 
\& WriteMakefile(
\&   ...
\&   CONFIGURE_REQUIRES => {
\&     \*(AqAlien::Libxml2\*(Aq => \*(Aq0\*(Aq,
\&   },
\&   CCFLAGS => Alien::Libxml2\->cflags . " $Config{ccflags}",
\&   LIBS    => [ Alien::Libxml2\->libs ],
\&   ...
\& );
.Ve
.PP
In your FFI::Platypus script or module:
.PP
.Vb 2
\& use FFI::Platypus;
\& use Alien::Libxml2;
\& 
\& my $ffi = FFI::Platypus\->new(
\&   lib => [ Alien::Libxml2\->dynamic_libs ],
\& );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides libxml2 for other modules to use.  There was an 
already existing Alien::LibXML, but it uses the older 
Alien::Build::ModuleBuild and has not bee actively maintained for a 
while.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Alien::LibXML" 4
.IX Item "Alien::LibXML"
Unmaintained Alien for the same library.
.SH "AUTHOR"
.IX Header "AUTHOR"
Graham Ollis <plicease@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by Graham Ollis.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
