.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "IO::Poll 3"
.TH IO::Poll 3 "perl v5.16.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IO::Poll \- Object interface to system poll call
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use IO::Poll qw(POLLRDNORM POLLWRNORM POLLIN POLLHUP);
\&
\&    $poll = IO::Poll\->new();
\&
\&    $poll\->mask($input_handle => POLLIN);
\&    $poll\->mask($output_handle => POLLOUT);
\&
\&    $poll\->poll($timeout);
\&
\&    $ev = $poll\->events($input);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`IO::Poll\*(C'\fR is a simple interface to the system level poll routine.
.SH "METHODS"
.IX Header "METHODS"
.IP "mask ( \s-1IO\s0 [, \s-1EVENT_MASK\s0 ] )" 4
.IX Item "mask ( IO [, EVENT_MASK ] )"
If \s-1EVENT_MASK\s0 is given, then, if \s-1EVENT_MASK\s0 is non-zero, \s-1IO\s0 is added to the
list of file descriptors and the next call to poll will check for
any event specified in \s-1EVENT_MASK\s0. If \s-1EVENT_MASK\s0 is zero then \s-1IO\s0 will be
removed from the list of file descriptors.
.Sp
If \s-1EVENT_MASK\s0 is not given then the return value will be the current
event mask value for \s-1IO\s0.
.IP "poll ( [ \s-1TIMEOUT\s0 ] )" 4
.IX Item "poll ( [ TIMEOUT ] )"
Call the system level poll routine. If \s-1TIMEOUT\s0 is not specified then the
call will block. Returns the number of handles which had events
happen, or \-1 on error.
.IP "events ( \s-1IO\s0 )" 4
.IX Item "events ( IO )"
Returns the event mask which represents the events that happened on \s-1IO\s0
during the last call to \f(CW\*(C`poll\*(C'\fR.
.IP "remove ( \s-1IO\s0 )" 4
.IX Item "remove ( IO )"
Remove \s-1IO\s0 from the list of file descriptors for the next poll.
.IP "handles( [ \s-1EVENT_MASK\s0 ] )" 4
.IX Item "handles( [ EVENT_MASK ] )"
Returns a list of handles. If \s-1EVENT_MASK\s0 is not given then a list of all
handles known will be returned. If \s-1EVENT_MASK\s0 is given then a list
of handles will be returned which had one of the events specified by
\&\s-1EVENT_MASK\s0 happen during the last call ti \f(CW\*(C`poll\*(C'\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIpoll\fR\|(2), IO::Handle, IO::Select
.SH "AUTHOR"
.IX Header "AUTHOR"
Graham Barr. Currently maintained by the Perl Porters.  Please report all
bugs to <perlbug@perl.org>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1997\-8 Graham Barr <gbarr@pobox.com>. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
